{"version":3,"sources":["assets/logo-1024.png","assets/landingPageDesktop.jpg","assets/landingPageMobile.jpg","navigation/NavBarSexyMaids.jsx","components/Home.jsx","components/About.jsx","components/Services.jsx","components/Terms.jsx","components/Employment.jsx","navigation/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBarSMWrapper","styled","div","_templateObject","Example","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","color","light","expand","href","id","src","logoImg","alt","onClick","navbar","className","Link","to","React","Component","HomeWrapper","Home_templateObject","bgImg","bgImgMobile","Home","About","Services","Terms","Employment","MainWrapper","Main_templateObject","Main","_Component","apply","arguments","inherits","createClass","key","value","BrowserRouter","NavBarSexyMaids_Example","Switch","Route","exact","path","component","App","navigation_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d09bf238.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-1024.63ec97fc.png\";","module.exports = __webpack_public_path__ + \"static/media/landingPageDesktop.aa2b690f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/landingPageMobile.963ab3d2.jpg\";","import React from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport logoImg from \"../assets/logo-1024.png\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst NavBarSMWrapper = styled.div`\r\n  ul {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow: hidden;\r\n  }\r\n\r\n  li {\r\n    float: left;\r\n  }\r\n\r\n  li a {\r\n    display: block;\r\n    color: white;\r\n    text-align: center;\r\n    padding: 14px 16px;\r\n    text-decoration: none;\r\n  }\r\n\r\n  li a:hover {\r\n    background-color: #111;\r\n  }\r\n\r\n  #navbarBrandImg {\r\n    img {\r\n      height: 10vh;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <NavBarSMWrapper>\r\n        <Navbar color=\"secondary\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">\r\n            <div id=\"navbarBrandImg\">\r\n              <img src={logoImg} alt=\"SexyMaids Logo\" />\r\n            </div>\r\n          </NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\" className=\"active\">\r\n                    Home\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/services\" className=\"\">\r\n                    Services\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/terms\" className=\"\">\r\n                    Terms\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/employment\" className=\"active\">\r\n                    Employment\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </NavBarSMWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport bgImg from \"../assets/landingPageDesktop.jpg\";\r\nimport bgImgMobile from \"../assets/landingPageMobile.jpg\";\r\n\r\nconst HomeWrapper = styled.div`\r\n  background-image: url(${bgImg});\r\n  background-color: yellow;\r\n  height: 87vh;\r\n\r\n  @media (max-width: 600px) {\r\n    background-image: url(${bgImgMobile});\r\n    height: 87vh;\r\n  }\r\n\r\n  #sMTagLine {\r\n    @media (max-width: 600px) {\r\n      position: absolute;\r\n      top: 10vh;\r\n      width: 100vw;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <HomeWrapper>\r\n        <div id=\"sMTagLine\">Have a Sexy Lady do your dirty jobs</div>\r\n      </HomeWrapper>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return <div>About</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Services extends Component {\r\n  render() {\r\n    return <div>Services</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Terms extends Component {\r\n  render() {\r\n    return <div>Terms</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Employment extends Component {\r\n  render() {\r\n    return <div>Employment</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport NavBarSM from \"./NavBarSexyMaids\";\r\nimport Home from \"../components/Home\";\r\nimport About from \"../components/About\";\r\nimport Services from \"../components/Services\";\r\nimport Terms from \"../components/Terms\";\r\nimport Employment from \"../components/Employment\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst MainWrapper = styled.div`\r\n  #mainViewer {\r\n    height: 100vh;\r\n  }\r\n`;\r\n\r\nexport class Main extends Component {\r\n  render() {\r\n    return (\r\n      <MainWrapper>\r\n        <BrowserRouter>\r\n          <div id=\"mainViewer\">\r\n            <NavBarSM />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route path=\"/services\" component={Services} />\r\n              <Route path=\"/terms\" component={Terms} />\r\n              <Route path=\"/employment\" component={Employment} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      </MainWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\n\nimport Main from \"./navigation/Main\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}